name: Create Release when bootstrap changed
on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if release prefix changed
        id: release_check_changes
        run: |
          # Calcula el hash MD5 del contenido anterior y actual de release
          old_release_hash=$(git show ${GITHUB_SHA}^:release_prefix | md5sum | awk '{print $1}')
          current_release_hash=$(git show ${GITHUB_SHA}:release_prefix | md5sum | awk '{print $1}')

          # Compara los hashes para verificar si ha cambiado el contenido
          if [ "$old_release_hash" != "$current_release_hash" ]
          then
             echo "::set-output name=changed::true"
          else
             echo "::set-output name=changed::false"
          fi
          
      - name: Read project release prefix (${{ steps.realease_check_changes.outputs.changed }})
        id: read_release_prefix
        run: |
          RELEASE_PREFIX=$(cat release_prefix)
          echo "::set-output name=prefix::$RELEASE_PREFIX"

      - name: Create new project version/release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: 'v${{ steps.read_release_prefix.outputs.prefix }}.${{ github.run_number }}'
          release_name: 'Release ${{ steps.read_release_prefix.outputs.prefix }}'
          body: |
            Automatic release created.
          draft: false
          prerelease: false
          files: release_prefix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Crear distribución de script de instalación bootstrap.sh
        id: upload-bootstrap-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # Obtener la URL de subida del release creado
          asset_path: ./bootstrap.sh  # Ruta al archivo a subir
          asset_name: bootstrap.sh  # Nombre del archivo en el release
          asset_content_type: application/octet-stream

      - name: Compress repository contents with gzip on package
        id: create_package
        run: |
          git ls-files | xargs gzip -r -k -9 -n > /tmp/bin-${{ steps.read_release_prefix.outputs.prefix }}.zip

      - name: Actualizar paquete de instalación
        id: upload-package-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/bin-${{ steps.read_release_prefix.outputs.prefix }}.zip
          asset_name: bin-${{ steps.read_release_prefix.outputs.prefix }}.zip
          asset_content_type: application/zip

      - name: Clean up temporary directory
        id: remove-temporal-files
        run: |
          rm -rf /tmp/bin-${{ steps.read_release_prefix.outputs.prefix }}.zip
