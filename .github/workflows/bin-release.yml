name: Create bin project release
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Check if zip is installed
        run: |
          if ! command -v zip &> /dev/null; then
              sudo apt update && sudo apt install -y zip
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check if release prefix changed
        id: release_check_changes
        run: |
          old_release_prefix=$(git show ${GITHUB_SHA}^:release_prefix)
          current_release_prefix=$(git show ${GITHUB_SHA}:release_prefix)

          if [ "$old_release_prefix" != "$current_release_prefix" ]; then
             echo "::set-output name=changed::true"
          else
             echo "::set-output name=changed::false"
          fi

      - name: Determine prerelease status
        id: determine_prerelease
        run: |
          if [ "${{ steps.release_check_changes.outputs.changed }}" == 'true' ]; then
             echo "::set-output name=prerelease::false"
          else
             echo "::set-output name=prerelease::true"
          fi

      - name: Read project release prefix
        id: read_release_prefix
        run: |
          RELEASE_PREFIX=$(cat release_prefix)
          echo "::set-output name=prefix::$RELEASE_PREFIX"

      - name: Create new project version/release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: 'v${{ steps.read_release_prefix.outputs.prefix }}.${{ github.run_number }}'
          release_name: 'Release ${{ steps.read_release_prefix.outputs.prefix }}'
          body: |
            Automatic release created.
          draft: false
          prerelease: ${{ steps.determine_prerelease.outputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload bootstrap.sh
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bootstrap.sh
          asset_name: bootstrap.sh
          asset_content_type: application/octet-stream

      - name: Compress repository contents with gzip
        run: |
          zip -r /tmp/bin_${{ steps.read_release_prefix.outputs.prefix }}.zip .

      - name: Upload package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/bin_${{ steps.read_release_prefix.outputs.prefix }}.zip
          asset_name: bin_${{ steps.read_release_prefix.outputs.prefix }}.zip
          asset_content_type: application/zip

      - name: Clean up
        run: |
          rm /tmp/bin_${{ steps.read_release_prefix.outputs.prefix }}.zip
